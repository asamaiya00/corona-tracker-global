{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid_new.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","style","color","backgroundColor","CardContent","Typography","gutterBottom","variant","start","value","end","duration","separator","Date","toDateString","api_url","fetchData","country","a","changeable_url","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","barChart","options","legend","display","title","text","CountryPicker","fetchCountry","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","src","coronaImg","image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.856f740b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3up8j\",\"card\":\"Cards_card__ZC9sE\",\"infected\":\"Cards_infected__IJNQI\",\"recovered\":\"Cards_recovered__-aIIC\",\"deaths\":\"Cards_deaths__2rvgg\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) return <h1>\"Loading...\"</h1>;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n          style={{color:'aqua',backgroundColor:'rgb(0,0,34)'}}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"inherit\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={confirmed.value / 2}\r\n                end={confirmed.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of people infected</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n          style={{color:'lightGreen',backgroundColor:'rgb(0,34,0)'}}\r\n\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"inherit\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={recovered.value / 2}\r\n                end={recovered.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Number of people recovered</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n          style={{color:'firebrick',backgroundColor:'rgb(34,0,0)'}}\r\n\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"inherit\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={deaths.value / 2}\r\n                end={deaths.value}\r\n                duration={3}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths due to Covid-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst api_url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeable_url = api_url;\r\n\r\n  if (country) changeable_url = `${api_url}/countries/${country}`;\r\n  \r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changeable_url);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${api_url}/daily`);\r\n\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${api_url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n\r\n    fetchApi();\r\n    console.log(dailyData);\r\n  }, []);\r\n\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255,0,0,0.5)',\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  \r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [{\r\n            labels: 'People',\r\n            backgroundColor: [\r\n              'rgba(0, 0, 255, 0.5)',\r\n              'rgba(0, 255, 0, 0.5)',\r\n              'rgba(255, 0, 0, 0.5)',\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          }],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current situation in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className={styles.container}>\r\n  {country?barChart:lineChart}</div>;\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ fetchCountry }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const countries = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    countries();\r\n  }, [setFetchedCountries]);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect style={{ color: \"silver\" }}\r\n        defaultValue=\" \"\r\n        onChange={(e) => fetchCountry(e.target.value)}\r\n      >\r\n        <option value=\"\"> Global </option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData } from './api';\r\nimport coronaImg from './images/covid_new.png'\r\n\r\nexport class App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  fetchCountry = async (country) => {\r\n    const fetchedData = await fetchData(country);\r\n\r\n    this.setState({ data: fetchedData, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n      <img src={coronaImg} className={styles.image} alt=\"COVID-19\"/>\r\n      <CountryPicker fetchCountry={this.fetchCountry} />\r\n        <Cards data={data} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2GNml\",\"image\":\"App_image__3g51b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2u6P7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2MVG_\"};","module.exports = __webpack_public_path__ + \"static/media/covid_new.ef290da1.png\";"],"sourceRoot":""}